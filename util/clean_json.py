import json

# Original message (truncated here for brevity â€” replace with your full string)
outer_json = {
    "role": "client",
    "ip": "10.19.30.2",
    "ok": True,
    "raw": "{\n\t\"start\":\t{\n\t\t\"connected\":\t[{\n\t\t\t\t\"socket\":\t5,\n\t\t\t\t\"local_host\":\t\"10.19.30.100\",\n\t\t\t\t\"local_port\":\t58822,\n\t\t\t\t\"remote_host\":\t\"10.19.30.2\",\n\t\t\t\t\"remote_port\":\t5201\n\t\t\t}],\n\t\t\"version\":\t\"iperf 3.9\",\n\t\t\"system_info\":\t\"Linux payload0 5.15.148-tegra #1 SMP PREEMPT Wed Dec 4 11:34:05 UTC 2024 aarch64\",\n\t\t\"timestamp\":\t{\n\t\t\t\"time\":\t\"Thu, 24 Jul 2025 18:33:14 GMT\",\n\t\t\t\"timesecs\":\t1753381994\n\t\t},\n\t\t\"connecting_to\":\t{\n\t\t\t\"host\":\t\"10.19.30.2\",\n\t\t\t\"port\":\t5201\n\t\t},\n\t\t\"cookie\":\t\"f4acjidom7peipfi3q2otl4epjsxwsgia2nv\",\n\t\t\"tcp_mss_default\":\t1448,\n\t\t\"sock_bufsize\":\t0,\n\t\t\"sndbuf_actual\":\t16384,\n\t\t\"rcvbuf_actual\":\t131072,\n\t\t\"test_start\":\t{\n\t\t\t\"protocol\":\t\"TCP\",\n\t\t\t\"num_streams\":\t1,\n\t\t\t\"blksize\":\t131072,\n\t\t\t\"omit\":\t0,\n\t\t\t\"duration\":\t3,\n\t\t\t\"bytes\":\t0,\n\t\t\t\"blocks\":\t0,\n\t\t\t\"reverse\":\t0,\n\t\t\t\"tos\":\t0\n\t\t}\n\t},\n\t\"intervals\":\t[{\n\t\t\t\"streams\":\t[{\n\t\t\t\t\t\"socket\":\t5,\n\t\t\t\t\t\"start\":\t0,\n\t\t\t\t\t\"end\":\t1.000156,\n\t\t\t\t\t\"seconds\":\t1.000156044960022,\n\t\t\t\t\t\"bytes\":\t3659096,\n\t\t\t\t\t\"bits_per_second\":\t29268200.844769262,\n\t\t\t\t\t\"retransmits\":\t20,\n\t\t\t\t\t\"snd_cwnd\":\t63712,\n\t\t\t\t\t\"rtt\":\t19813,\n\t\t\t\t\t\"rttvar\":\t4035,\n\t\t\t\t\t\"pmtu\":\t1500,\n\t\t\t\t\t\"omitted\":\tfalse,\n\t\t\t\t\t\"sender\":\ttrue\n\t\t\t\t}],\n\t\t\t\"sum\":\t{\n\t\t\t\t\"start\":\t0,\n\t\t\t\t\"end\":\t1.000156,\n\t\t\t\t\"seconds\":\t1.000156044960022,\n\t\t\t\t\"bytes\":\t3659096,\n\t\t\t\t\"bits_per_second\":\t29268200.844769262,\n\t\t\t\t\"retransmits\":\t20,\n\t\t\t\t\"omitted\":\tfalse,\n\t\t\t\t\"sender\":\ttrue\n\t\t\t}\n\t\t}, {\n\t\t\t\"streams\":\t[{\n\t\t\t\t\t\"socket\":\t5,\n\t\t\t\t\t\"start\":\t1.000156,\n\t\t\t\t\t\"end\":\t2.000106,\n\t\t\t\t\t\"seconds\":\t0.99994999170303345,\n\t\t\t\t\t\"bytes\":\t3714120,\n\t\t\t\t\t\"bits_per_second\":\t29714445.968838207,\n\t\t\t\t\t\"retransmits\":\t7,\n\t\t\t\t\t\"snd_cwnd\":\t57920,\n\t\t\t\t\t\"rtt\":\t13386,\n\t\t\t\t\t\"rttvar\":\t1642,\n\t\t\t\t\t\"pmtu\":\t1500,\n\t\t\t\t\t\"omitted\":\tfalse,\n\t\t\t\t\t\"sender\":\ttrue\n\t\t\t\t}],\n\t\t\t\"sum\":\t{\n\t\t\t\t\"start\":\t1.000156,\n\t\t\t\t\"end\":\t2.000106,\n\t\t\t\t\"seconds\":\t0.99994999170303345,\n\t\t\t\t\"bytes\":\t3714120,\n\t\t\t\t\"bits_per_second\":\t29714445.968838207,\n\t\t\t\t\"retransmits\":\t7,\n\t\t\t\t\"omitted\":\tfalse,\n\t\t\t\t\"sender\":\ttrue\n\t\t\t}\n\t\t}, {\n\t\t\t\"streams\":\t[{\n\t\t\t\t\t\"socket\":\t5,\n\t\t\t\t\t\"start\":\t2.000106,\n\t\t\t\t\t\"end\":\t3.000189,\n\t\t\t\t\t\"seconds\":\t1.0000829696655273,\n\t\t\t\t\t\"bytes\":\t3192840,\n\t\t\t\t\t\"bits_per_second\":\t25540600.904885553,\n\t\t\t\t\t\"retransmits\":\t4,\n\t\t\t\t\t\"snd_cwnd\":\t75296,\n\t\t\t\t\t\"rtt\":\t20748,\n\t\t\t\t\t\"rttvar\":\t6703,\n\t\t\t\t\t\"pmtu\":\t1500,\n\t\t\t\t\t\"omitted\":\tfalse,\n\t\t\t\t\t\"sender\":\ttrue\n\t\t\t\t}],\n\t\t\t\"sum\":\t{\n\t\t\t\t\"start\":\t2.000106,\n\t\t\t\t\"end\":\t3.000189,\n\t\t\t\t\"seconds\":\t1.0000829696655273,\n\t\t\t\t\"bytes\":\t3192840,\n\t\t\t\t\"bits_per_second\":\t25540600.904885553,\n\t\t\t\t\"retransmits\":\t4,\n\t\t\t\t\"omitted\":\tfalse,\n\t\t\t\t\"sender\":\ttrue\n\t\t\t}\n\t\t}],\n\t\"end\":\t{\n\t\t\"streams\":\t[{\n\t\t\t\t\"sender\":\t{\n\t\t\t\t\t\"socket\":\t5,\n\t\t\t\t\t\"start\":\t0,\n\t\t\t\t\t\"end\":\t3.000189,\n\t\t\t\t\t\"seconds\":\t3.000189,\n\t\t\t\t\t\"bytes\":\t10566056,\n\t\t\t\t\t\"bits_per_second\":\t28174374.347749423,\n\t\t\t\t\t\"retransmits\":\t31,\n\t\t\t\t\t\"max_snd_cwnd\":\t75296,\n\t\t\t\t\t\"max_rtt\":\t20748,\n\t\t\t\t\t\"min_rtt\":\t13386,\n\t\t\t\t\t\"mean_rtt\":\t17982,\n\t\t\t\t\t\"sender\":\ttrue\n\t\t\t\t},\n\t\t\t\t\"receiver\":\t{\n\t\t\t\t\t\"socket\":\t5,\n\t\t\t\t\t\"start\":\t0,\n\t\t\t\t\t\"end\":\t3.0416920185089111,\n\t\t\t\t\t\"seconds\":\t3.000189,\n\t\t\t\t\t\"bytes\":\t10201160,\n\t\t\t\t\t\"bits_per_second\":\t26830224.5932204,\n\t\t\t\t\t\"sender\":\ttrue\n\t\t\t\t}\n\t\t\t}],\n\t\t\"sum_sent\":\t{\n\t\t\t\"start\":\t0,\n\t\t\t\"end\":\t3.000189,\n\t\t\t\"seconds\":\t3.000189,\n\t\t\t\"bytes\":\t10566056,\n\t\t\t\"bits_per_second\":\t28174374.347749423,\n\t\t\t\"retransmits\":\t31,\n\t\t\t\"sender\":\ttrue\n\t\t},\n\t\t\"sum_received\":\t{\n\t\t\t\"start\":\t0,\n\t\t\t\"end\":\t3.0416920185089111,\n\t\t\t\"seconds\":\t3.0416920185089111,\n\t\t\t\"bytes\":\t10201160,\n\t\t\t\"bits_per_second\":\t26830224.5932204,\n\t\t\t\"sender\":\ttrue\n\t\t},\n\t\t\"cpu_utilization_percent\":\t{\n\t\t\t\"host_total\":\t1.0504326373459061,\n\t\t\t\"host_user\":\t0,\n\t\t\t\"host_system\":\t1.0504648948277062,\n\t\t\t\"remote_total\":\t0.850195200580816,\n\t\t\t\"remote_user\":\t0.053372772268280133,\n\t\t\t\"remote_system\":\t0.79681129108586557\n\t\t},\n\t\t\"sender_tcp_congestion\":\t\"cubic\",\n\t\t\"receiver_tcp_congestion\":\t\"cubic\"\n\t}\n}\n"
}

# Step 1: parse the outer JSON (already done)
# Step 2: parse the inner JSON string
inner_raw = outer_json["raw"]
inner_json = json.loads(inner_raw)

# Step 3: pretty-print
pretty = json.dumps(inner_json, indent=4)
print(pretty)

# Optional: save to a file
with open("iperf_result_pretty.json", "w") as f:
    f.write(pretty)
